generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ✨ NOVO MODELO PARA INSUMOS / INGREDIENTES ✨
model Ingredient {
  id            String       @id @default(uuid())
  name          String       @unique
  stockQuantity Decimal      // Quantidade em estoque
  unit          String       // Unidade de medida (ex: 'un', 'g', 'kg', 'ml', 'l')
  recipeItems   RecipeItem[] // Relação: pode estar em várias receitas
}

// ✨ NOVO MODELO PARA O ITEM DA RECEITA (FICHA TÉCNICA) ✨
// Esta é uma "tabela de junção" que conecta Produtos e Ingredientes.
model RecipeItem {
  id           String     @id @default(uuid())
  quantity     Decimal    // Quantidade do ingrediente necessária para o produto

  productId    String
  product      Product    @relation(fields: [productId], references: [id])

  ingredientId String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
}

model Product {
  id          String       @id @default(uuid())
  name        String
  price       Decimal
  createdAt   DateTime     @default(now())
  orderItems  OrderItem[]
  recipeItems RecipeItem[] // Relação: um produto pode ter vários itens na sua receita
}

model Table {
  id     String  @id @default(uuid())
  name   String  @unique
  orders Order[]
}

model Order {
  id        String      @id @default(uuid())
  total     Decimal
  createdAt DateTime    @default(now())
  items     OrderItem[]
  tableId   String?
  table     Table?      @relation(fields: [tableId], references: [id])
}

model OrderItem {
  id        String  @id @default(uuid())
  quantity  Int
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
}